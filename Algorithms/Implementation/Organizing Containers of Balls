import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the organizingContainers function below.
    static String organizingContainers(int[][] container) {
        int n = container.length;
        int[] ballsInContainers = new int[n];
        int[] ballsOfType = new int[n];
        
        for (int i = 0; i < n; i++) {
            int capacityOfContainer = 0;
            for (int j = 0; j < container[i].length; j++) {
                ballsInContainers[i] += container[i][j];
                ballsOfType[j] += container[i][j];
            }
        }
        
        boolean isEqual = false;
        
        for (int i = 0; i < n; i++) {
            int j;
            for (j = i; j < n; j++) {
                if (ballsInContainers[i] == ballsOfType[j]) {
                    int temp = ballsOfType[i];
                    ballsOfType[i] = ballsOfType[j];
                    ballsOfType[j] = temp;
                    
                    isEqual = true;
                    break;
                }
            }
            
            if (!isEqual) {
                return "Impossible";
            }
        }
        return "Possible";
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[][] container = new int[n][n];

            for (int i = 0; i < n; i++) {
                String[] containerRowItems = scanner.nextLine().split(" ");
                scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

                for (int j = 0; j < n; j++) {
                    int containerItem = Integer.parseInt(containerRowItems[j]);
                    container[i][j] = containerItem;
                }
            }

            String result = organizingContainers(container);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
