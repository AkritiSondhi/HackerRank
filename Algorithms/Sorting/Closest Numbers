import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the closestNumbers function below.
    static int[] closestNumbers(int[] arr) {
        Arrays.sort(arr);
        int size = arr.length;
        int minDiff = Integer.MAX_VALUE;
        int result[] = new int[2];

        for (int i = 0; i < size - 1; i++) {
            if (Math.abs(arr[i] - arr[i + 1]) < minDiff) {
                minDiff = Math.abs(arr[i] - arr[i + 1]);
                result = new int[2];
                result[0] = arr[i];
                result[1] = arr[i + 1];
            }
            else if (minDiff == Math.abs(arr[i] - arr[i + 1])) {
                int oldSize = result.length;
                int[] newResult = new int[oldSize + 2];

                int j = 0;
                for (j = 0; j < oldSize; j++) {
                    newResult[j] = result[j];
                }
                newResult[j] = arr[i];
                newResult[j + 1] = arr[i + 1];

                result = newResult;
            }
        }

        return result;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = closestNumbers(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
