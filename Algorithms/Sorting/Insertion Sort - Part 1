import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the insertionSort1 function below.
    static void insertionSort1(int n, int[] arr) {
        int lastNum = arr[n - 1];
        boolean isLastNumMin = true;

        for (int i = n - 2; i >= 0; i--) {
            if (lastNum < arr[i]) {
                arr[i + 1] = arr[i];
            }
            else {
                arr[i + 1] = lastNum;
                isLastNumMin = false;
                printArray(n, arr);
                break;
            }
            printArray(n, arr);
        }

        if (isLastNumMin) {
            arr[0] = lastNum;
            printArray(n, arr);
        }
    }

    static void printArray(int n, int[] arr) {
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }

        System.out.println("");
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        insertionSort1(n, arr);

        scanner.close();
    }
}
