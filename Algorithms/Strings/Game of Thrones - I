import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the gameOfThrones function below.
    static String gameOfThrones(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        int size = s.length();

        for (int i = 0; i < size; i++) {
            char letter = s.charAt(i);
            map.put(letter, map.getOrDefault(letter, 0) + 1);
        }

        boolean hasSingleChar = false;

        for (char letter: map.keySet()) {
            if (map.get(letter) % 2 == 1) {
                if (hasSingleChar) {
                    return "NO";
                }
                else {
                    hasSingleChar = true;
                }
            }
        }

        return "YES";
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = scanner.nextLine();

        String result = gameOfThrones(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
