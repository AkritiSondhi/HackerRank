import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the alternate function below.
    static int alternate(String s) {
        int n = s.length();

        if(n <= 1) {
            return 0;
        }

        int[][] pairs = new int[26][26];
        int[][] count = new int[26][26];

        for (int i = 0; i < n; i++) {
            int j;
            int value = s.charAt(i) - 'a';

            // row
            for (j = 0; j < 26; j++) {
                if (pairs[value][j] == (int)s.charAt(i)) {
                    count[value][j] = -1;
                }

                if(count[value][j] != -1) {
                    pairs[value][j] = (int)s.charAt(i);
                    count[value][j]++;
                }
            }

            // column
            for (j = 0; j < 26; j++) {
                if (pairs[j][value] == (int)s.charAt(i)) {
                    count[j][value] = -1;
                }

                if(count[j][value] != -1) {
                    pairs[j][value] = (int)s.charAt(i);
                    count[j][value]++;
                }
            }
        }

        int max = 0;
        for (int i = 0; i < 26; i++) {
            for (int j = 0; j < 26; j++) {
                if(count[i][j] > max) {
                    max = count[i][j];
                }
            }
        }

return max;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int l = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int result = alternate(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
